{"version":3,"sources":["webpack:///./src/pages/business/index.js","webpack:///./src/components/seo/index.js","webpack:///./src/components/nav/about.js"],"names":["AboutPage","withSubtitle","title","SEO","description","image","article","pathname","useLocation","useStaticQuery","query","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","seo","url","name","content","property","defaultProps","links","AboutNav"],"mappings":"4FAAA,qEAwDeA,UAnDG,kBAChB,YAAC,IAAD,CAAYC,cAAc,GACxB,YAAC,IAAD,CAAKC,MAAM,oDACX,YAAC,IAAD,MACA,2BACE,yEACA,qUAQA,4bASA,mmBAYA,0KAGa,KAGb,uTAKe,S,kCCnDrB,8DAMMC,EAAM,SAAC,GAA4C,IAA1CD,EAAyC,EAAzCA,MAAOE,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAChCC,EAAaC,wBAAbD,SAGR,EAFiBE,YAAeC,GAAxBC,KASCC,aANPC,EADF,EACEA,aACAC,EAFF,EAEEA,cACAC,EAHF,EAGEA,mBACAC,EAJF,EAIEA,QACAC,EALF,EAKEA,aACAC,EANF,EAMEA,gBAGIC,EAAM,CACVjB,MAAOA,GAASW,EAChBT,YAAaA,GAAeW,EAC5BV,MAAM,GAAIW,GAAUX,GAASY,GAC7BG,IAAI,GAAIJ,EAAUT,GAGpB,OACE,YAAC,IAAD,CAAQL,MAAOiB,EAAIjB,MAAOY,cAAeA,GACvC,oBAAMO,KAAK,cAAcC,QAASH,EAAIf,cACtC,oBAAMiB,KAAK,QAAQC,QAASH,EAAId,QAE/Bc,EAAIC,KAAO,oBAAMG,SAAS,SAASD,QAASH,EAAIC,OAE/Cd,EAAiB,KAAS,oBAAMiB,SAAS,UAAUD,QAAQ,YAE5DH,EAAIjB,OAAS,oBAAMqB,SAAS,WAAWD,QAASH,EAAIjB,QAEpDiB,EAAIf,aACH,oBAAMmB,SAAS,iBAAiBD,QAASH,EAAIf,cAG9Ce,EAAId,OAAS,oBAAMkB,SAAS,WAAWD,QAASH,EAAId,QAErD,oBAAMgB,KAAK,eAAeC,QAAQ,wBAEjCJ,GACC,oBAAMG,KAAK,kBAAkBC,QAASJ,IAGvCC,EAAIjB,OAAS,oBAAMmB,KAAK,gBAAgBC,QAASH,EAAIjB,QAErDiB,EAAIf,aACH,oBAAMiB,KAAK,sBAAsBC,QAASH,EAAIf,cAG/Ce,EAAId,OAAS,oBAAMgB,KAAK,gBAAgBC,QAASH,EAAId,UAK7CF,MASfA,EAAIqB,aAAe,CACjBtB,MAAO,KACPE,YAAa,KACbC,MAAO,KACPC,SAAS,GAGX,IAAMI,EAAK,c,kCC5EX,sCAGMe,EAAQ,CACZ,CAAC,cAAe,UAChB,CAAC,UAAW,YACZ,CAAC,UAAW,YACZ,CAAC,WAAY,aACb,CAAC,aAAc,eACf,CAAC,UAAW,aAKCC,IAFE,kBAAM,YAAC,IAAD,CAAKD,MAAOA","file":"component---src-pages-business-index-js-5c0d0704b54f0e881f3a.js","sourcesContent":["import React from \"react\";\nimport CoreLayout from \"../../components/coreLayout\";\nimport Nav from \"../../components/nav/about\";\nimport SEO from \"../../components/seo\";\n\nconst AboutPage = () => (\n  <CoreLayout withSubtitle={false}>\n    <SEO title=\"Meeting for Worship with a Concern for Business\" />\n    <Nav />\n    <section>\n      <h2>Meeting for Worship with a Concern for Business</h2>\n      <p>\n        Unlike Meeting for Worship, which is held weekly, Meeting for Business\n        takes place only once a month, on the first Sunday of every month, or\n        the nearest time to it. During that time, the Meeting takes care of its\n        business—from hearing and acting on committee reports to the acceptance\n        of new members.\n      </p>\n\n      <p>\n        Morningside refers to Meeting for Business as Meeting for Worship with a\n        Concern for Business. The name emphasizes the true nature of any\n        Meeting: worship. On the one hand, meeting implies a secular transaction\n        that is best emphasized in the original Greek assembly, later used for\n        church: ἐκκλησία. On the other hand, Meeting is used by Friends to\n        designate the weekly silent worship that is at the heart of Quakerism.\n      </p>\n\n      <p>\n        Like Meeting for Worship, Meeting for Business arises out of the\n        silence. Friends believe that all have access to the Teacher within, and\n        if we proceed in worshipful attention, the Spirit will lead us to the\n        correct decision. As we trust that the Spirit does not breed contention,\n        we can proceed in our business without the aid of a majority opinion.\n        Friends discuss business as it arises, but the business never comes to a\n        vote. This does not imply that all decisions must be unanimous, for that\n        would require shutting down all dissenting voices and the voice of the\n        Spirit within all.\n      </p>\n\n      <p>\n        Instead we seek a decision that we hope is in agreement with the\n        leadings of the Spirit and that will, therefore, strengthen the entire\n        community.{\" \"}\n      </p>\n\n      <p>\n        Monthly Meetings meet for Business once a month. Quarterly Meeting\n        (which includes the Monthly Meetings in the Metropolitan area) meet\n        every Quarter. New York Yearly Meeting (which includes Meetings in New\n        York State, northern New Jersey, and southwestern Connecticut) meets\n        once a year.{\" \"}\n      </p>\n    </section>\n  </CoreLayout>\n);\nexport default AboutPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { useLocation } from \"@reach/router\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst SEO = ({ title, description, image, article }) => {\n  const { pathname } = useLocation();\n  const { site } = useStaticQuery(query);\n\n  const {\n    defaultTitle,\n    titleTemplate,\n    defaultDescription,\n    siteUrl,\n    defaultImage,\n    twitterUsername,\n  } = site.siteMetadata;\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image || defaultImage}`,\n    url: `${siteUrl}${pathname}`,\n  };\n\n  return (\n    <Helmet title={seo.title} titleTemplate={titleTemplate}>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n\n      {seo.url && <meta property=\"og:url\" content={seo.url} />}\n\n      {(article ? true : null) && <meta property=\"og:type\" content=\"article\" />}\n\n      {seo.title && <meta property=\"og:title\" content={seo.title} />}\n\n      {seo.description && (\n        <meta property=\"og:description\" content={seo.description} />\n      )}\n\n      {seo.image && <meta property=\"og:image\" content={seo.image} />}\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n\n      {twitterUsername && (\n        <meta name=\"twitter:creator\" content={twitterUsername} />\n      )}\n\n      {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n\n      {seo.description && (\n        <meta name=\"twitter:description\" content={seo.description} />\n      )}\n\n      {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n    </Helmet>\n  );\n};\n\nexport default SEO;\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  article: PropTypes.bool,\n};\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  article: false,\n};\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        titleTemplate\n        defaultDescription: description\n        siteUrl: url\n        defaultImage: image\n        # twitterUsername\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport Nav from \"./index\";\n\nconst links = [\n  [\"Morningside\", \"/about\"],\n  [\"Quakers\", \"/quakers\"],\n  [\"Worship\", \"/worship\"],\n  [\"Business\", \"/business\"],\n  [\"Fellowship\", \"/fellowship\"],\n  [\"Library\", \"/library\"],\n];\n\nconst AboutNav = () => <Nav links={links} />;\n\nexport default AboutNav;\n"],"sourceRoot":""}