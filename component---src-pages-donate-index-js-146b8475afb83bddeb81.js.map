{"version":3,"sources":["webpack:///./src/pages/donate/index.js","webpack:///./src/components/seo/index.js"],"names":["DonatePage","data","withSubtitle","title","className","action","method","target","type","name","value","src","border","alt","style","marginBottom","fluid","QRCode","childImageSharp","width","height","SEO","description","image","article","pathname","useLocation","useStaticQuery","query","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","seo","url","content","property","defaultProps"],"mappings":"8FAAA,8EAmFeA,UA7EI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACjB,YAAC,IAAD,CAAYC,cAAc,GACxB,YAAC,IAAD,CAAKC,MAAM,kCACX,2BACE,qDACA,+GAIA,oJAIA,iFACA,2CAEE,uBAFF,yBAGE,uBAHF,sBAKE,uBALF,uBASF,2BACE,uCACA,qBACE,qIAE0C,iCAF1C,kCAMF,mBAAKC,UAAU,oBACb,oBACEC,OAAO,gCACPC,OAAO,OACPC,OAAO,QAEP,qBAAOC,KAAK,SAASC,KAAK,mBAAmBC,MAAM,kBACnD,qBACEF,KAAK,QACLG,IAAI,8DACJC,OAAO,IACPH,KAAK,SACLN,MAAM,gDACNU,IAAI,4BACJC,MAAO,CAAEC,aAAc,UAEzB,YAAC,IAAD,CAAKC,MAAOf,EAAKgB,OAAOC,gBAAgBF,QACxC,mBACEH,IAAI,GACJD,OAAO,IACPD,IAAI,+CACJQ,MAAM,IACNC,OAAO,Y,kCC5DnB,8DAMMC,EAAM,SAAC,GAA4C,IAA1ClB,EAAyC,EAAzCA,MAAOmB,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAChCC,EAAaC,wBAAbD,SAGR,EAFiBE,YAAeC,GAAxBC,KASCC,aANPC,EADF,EACEA,aACAC,EAFF,EAEEA,cACAC,EAHF,EAGEA,mBACAC,EAJF,EAIEA,QACAC,EALF,EAKEA,aACAC,EANF,EAMEA,gBAGIC,EAAM,CACVlC,MAAOA,GAAS4B,EAChBT,YAAaA,GAAeW,EAC5BV,MAAM,GAAIW,GAAUX,GAASY,GAC7BG,IAAI,GAAIJ,EAAUT,GAGpB,OACE,YAAC,IAAD,CAAQtB,MAAOkC,EAAIlC,MAAO6B,cAAeA,GACvC,oBAAMvB,KAAK,cAAc8B,QAASF,EAAIf,cACtC,oBAAMb,KAAK,QAAQ8B,QAASF,EAAId,QAE/Bc,EAAIC,KAAO,oBAAME,SAAS,SAASD,QAASF,EAAIC,OAE/Cd,EAAiB,KAAS,oBAAMgB,SAAS,UAAUD,QAAQ,YAE5DF,EAAIlC,OAAS,oBAAMqC,SAAS,WAAWD,QAASF,EAAIlC,QAEpDkC,EAAIf,aACH,oBAAMkB,SAAS,iBAAiBD,QAASF,EAAIf,cAG9Ce,EAAId,OAAS,oBAAMiB,SAAS,WAAWD,QAASF,EAAId,QAErD,oBAAMd,KAAK,eAAe8B,QAAQ,wBAEjCH,GACC,oBAAM3B,KAAK,kBAAkB8B,QAASH,IAGvCC,EAAIlC,OAAS,oBAAMM,KAAK,gBAAgB8B,QAASF,EAAIlC,QAErDkC,EAAIf,aACH,oBAAMb,KAAK,sBAAsB8B,QAASF,EAAIf,cAG/Ce,EAAId,OAAS,oBAAMd,KAAK,gBAAgB8B,QAASF,EAAId,UAK7CF,MASfA,EAAIoB,aAAe,CACjBtC,MAAO,KACPmB,YAAa,KACbC,MAAO,KACPC,SAAS,GAGX,IAAMI,EAAK","file":"component---src-pages-donate-index-js-146b8475afb83bddeb81.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport CoreLayout from \"../../components/coreLayout\";\nimport SEO from \"../../components/seo\";\nimport Img from \"gatsby-image\";\n\nconst DonatePage = ({ data }) => (\n  <CoreLayout withSubtitle={false}>\n    <SEO title=\"Donate to Morningside Meeting\" />\n    <section>\n      <h2>Support Morningside Meeting</h2>\n      <p>\n        Morningside gratefully accepts donations to support its work,\n        activities, and worship.\n      </p>\n      <p>\n        You can make a one-time or recurring donation online by either clicking\n        on the Donate button or scanning the QR code below.\n      </p>\n      <p>If you prefer to donate with a check, please send it to:</p>\n      <p>\n        Morningside Meeting\n        <br />â„… NY Quarterly Meeting\n        <br />\n        15 Rutherford Place\n        <br />\n        New York, NY 10003\n      </p>\n    </section>\n    <section>\n      <h3>Donate Online</h3>\n      <p>\n        <em>\n          Please note that clicking on the Donate button will redirect you to\n          our form on PayPal; a PayPal account is <strong>not</strong> required\n          to donate, however.\n        </em>\n      </p>\n      <div className=\"donate-container\">\n        <form\n          action=\"https://www.paypal.com/donate\"\n          method=\"post\"\n          target=\"_top\"\n        >\n          <input type=\"hidden\" name=\"hosted_button_id\" value=\"JBTCB4CK6XT7Y\" />\n          <input\n            type=\"image\"\n            src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif\"\n            border=\"0\"\n            name=\"submit\"\n            title=\"PayPal - The safer, easier way to pay online!\"\n            alt=\"Donate with PayPal button\"\n            style={{ marginBottom: \"20px\" }}\n          />\n          <Img fluid={data.QRCode.childImageSharp.fluid} />\n          <img\n            alt=\"\"\n            border=\"0\"\n            src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\"\n            width=\"1\"\n            height=\"1\"\n          />\n        </form>\n      </div>\n    </section>\n  </CoreLayout>\n);\n\nexport const query = graphql`\n  {\n    QRCode: file(relativePath: { eq: \"paypal-qr-code.png\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fluid(maxWidth: 150, quality: 100) {\n          ...GatsbyImageSharpFluid\n          ...GatsbyImageSharpFluidLimitPresentationSize\n        }\n      }\n    }\n  }\n`;\n\nexport default DonatePage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { useLocation } from \"@reach/router\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst SEO = ({ title, description, image, article }) => {\n  const { pathname } = useLocation();\n  const { site } = useStaticQuery(query);\n\n  const {\n    defaultTitle,\n    titleTemplate,\n    defaultDescription,\n    siteUrl,\n    defaultImage,\n    twitterUsername,\n  } = site.siteMetadata;\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image || defaultImage}`,\n    url: `${siteUrl}${pathname}`,\n  };\n\n  return (\n    <Helmet title={seo.title} titleTemplate={titleTemplate}>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n\n      {seo.url && <meta property=\"og:url\" content={seo.url} />}\n\n      {(article ? true : null) && <meta property=\"og:type\" content=\"article\" />}\n\n      {seo.title && <meta property=\"og:title\" content={seo.title} />}\n\n      {seo.description && (\n        <meta property=\"og:description\" content={seo.description} />\n      )}\n\n      {seo.image && <meta property=\"og:image\" content={seo.image} />}\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n\n      {twitterUsername && (\n        <meta name=\"twitter:creator\" content={twitterUsername} />\n      )}\n\n      {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n\n      {seo.description && (\n        <meta name=\"twitter:description\" content={seo.description} />\n      )}\n\n      {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n    </Helmet>\n  );\n};\n\nexport default SEO;\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  article: PropTypes.bool,\n};\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  article: false,\n};\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        titleTemplate\n        defaultDescription: description\n        siteUrl: url\n        defaultImage: image\n        # twitterUsername\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}