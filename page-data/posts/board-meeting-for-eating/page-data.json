{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/posts/board-meeting-for-eating/","result":{"data":{"site":{"siteMetadata":{"title":"Morningside Monthly Meeting","social":[{"name":"facebook","url":"https://www.facebook.com/MorningsideQuakers"},{"name":"github","url":"https://github.com/morningsidequakermeeting"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"d2eb5643-7a9a-5839-b926-189f28af85b8","excerpt":"Charlene Ray writes: The NYQM working group, Concern for Quaker Living (CQL) invites you to a Meeting for Eating! It’s a potluck! Bring your…","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"You are invited to Potluck!  A Meeting for Eating!\",\n  \"date\": \"2024-01-18T00:00:00.000Z\",\n  \"tags\": [\"board\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Charlene Ray writes:\"), mdx(\"p\", null, \"The NYQM working group, Concern for Quaker Living (CQL) invites you to a Meeting for Eating! It\\u2019s a potluck! Bring your favorite dish! Spill the tea on strength and joy. Let\\u2019s hear your thoughts and talents. More spiritual resiliency, health, Light, love and connection in 2024!\"), mdx(\"p\", null, \"Meeting for Eating Potluck\", mdx(\"br\", null), \"\\nTuesday Evening, January 30, 2024\", mdx(\"br\", null), \"\\n6:30 pm \", mdx(\"br\", null), \"\\nSocial Room, Brooklyn Meetinghouse\", mdx(\"br\", null), \"\\n110 Schermerhorn Street\"), mdx(\"p\", null, \"We ask that you test negative for COVID before this event.\"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/posts/board-meeting-for-eating/","title":"You are invited to Potluck!  A Meeting for Eating!","tags":["board"],"date":"January 18, 2024","image":null,"imageAlt":null,"imageCaptionText":null,"imageCaptionLink":null,"socialImage":null},"previous":{"__typename":"MdxBlogPost","id":"59fa34e0-2658-57fc-8230-92835e6b9c16","excerpt":"Meeting for Worship Morningside Meeting will hold our next  meeting for worship  on December 31 at 11 a.m.: a hybrid in-person/remote…","slug":"/posts/December17-2023/","title":"Announcements for the Week of December 25-31, 2023","date":"December 27, 2023"},"next":{"__typename":"MdxBlogPost","id":"c062bb1c-559c-5e0e-9794-4fbabdac8958","excerpt":"Meeting for Worship Morningside Meeting will hold our next  meeting for worship  on January 21 at 11 a.m.: a hybrid in-person/remote meeting…","slug":"/posts/January-21-2024/","title":"Announcements for the Week of January 15-21","date":"January 18, 2024"}},"pageContext":{"id":"d2eb5643-7a9a-5839-b926-189f28af85b8","previousId":"59fa34e0-2658-57fc-8230-92835e6b9c16","nextId":"c062bb1c-559c-5e0e-9794-4fbabdac8958","maxWidth":1380}},"staticQueryHashes":["2744905544"]}