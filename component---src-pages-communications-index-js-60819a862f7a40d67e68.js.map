{"version":3,"sources":["webpack:///./src/pages/communications/index.js","webpack:///./src/components/committee/index.js","webpack:///./src/components/seo/index.js"],"names":["CommitteePage","title","basePath","children","links","withSubtitle","SEO","description","image","article","pathname","useLocation","useStaticQuery","query","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","seo","url","name","content","property","defaultProps"],"mappings":"8FAAA,iGAIe,SAASA,IACtB,OACE,YAAC,IAAD,CAAWC,MAAOA,IAAOC,SAAUA,KACjC,iPAOA,uNAMA,4NAMA,2LAMA,6LAMA,gKAKA,8KAMA,oH,kMCjDN,gGAKe,SAASF,EAAT,GAAuD,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACjDC,EAAQ,CACZ,CAAC,QAASF,GACV,CAAC,QAAYA,EAAb,UACA,CAAC,SAAaA,EAAd,WACA,CAAC,YAAgBA,EAAjB,eAGF,OACE,YAAC,IAAD,CAAYG,cAAc,GACxB,sBAAKJ,GACL,YAAC,IAAD,CAAKG,MAAOA,IACZ,2BAAUD,GACV,YAAC,IAAD,CAAKF,MAAOA,O,kCClBlB,8DAMMK,EAAM,SAAC,GAA4C,IAA1CL,EAAyC,EAAzCA,MAAOM,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAChCC,EAAaC,wBAAbD,SAGR,EAFiBE,YAAeC,GAAxBC,KASCC,aANPC,EADF,EACEA,aACAC,EAFF,EAEEA,cACAC,EAHF,EAGEA,mBACAC,EAJF,EAIEA,QACAC,EALF,EAKEA,aACAC,EANF,EAMEA,gBAGIC,EAAM,CACVrB,MAAOA,GAASe,EAChBT,YAAaA,GAAeW,EAC5BV,MAAM,GAAIW,GAAUX,GAASY,GAC7BG,IAAI,GAAIJ,EAAUT,GAGpB,OACE,YAAC,IAAD,CAAQT,MAAOqB,EAAIrB,MAAOgB,cAAeA,GACvC,oBAAMO,KAAK,cAAcC,QAASH,EAAIf,cACtC,oBAAMiB,KAAK,QAAQC,QAASH,EAAId,QAE/Bc,EAAIC,KAAO,oBAAMG,SAAS,SAASD,QAASH,EAAIC,OAE/Cd,EAAiB,KAAS,oBAAMiB,SAAS,UAAUD,QAAQ,YAE5DH,EAAIrB,OAAS,oBAAMyB,SAAS,WAAWD,QAASH,EAAIrB,QAEpDqB,EAAIf,aACH,oBAAMmB,SAAS,iBAAiBD,QAASH,EAAIf,cAG9Ce,EAAId,OAAS,oBAAMkB,SAAS,WAAWD,QAASH,EAAId,QAErD,oBAAMgB,KAAK,eAAeC,QAAQ,wBAEjCJ,GACC,oBAAMG,KAAK,kBAAkBC,QAASJ,IAGvCC,EAAIrB,OAAS,oBAAMuB,KAAK,gBAAgBC,QAASH,EAAIrB,QAErDqB,EAAIf,aACH,oBAAMiB,KAAK,sBAAsBC,QAASH,EAAIf,cAG/Ce,EAAId,OAAS,oBAAMgB,KAAK,gBAAgBC,QAASH,EAAId,UAK7CF,MASfA,EAAIqB,aAAe,CACjB1B,MAAO,KACPM,YAAa,KACbC,MAAO,KACPC,SAAS,GAGX,IAAMI,EAAK","file":"component---src-pages-communications-index-js-60819a862f7a40d67e68.js","sourcesContent":["import React from \"react\";\nimport Committee from \"../../components/committee\";\nimport { basePath, title } from \"./config.json\";\n\nexport default function CommitteePage() {\n  return (\n    <Committee title={title} basePath={basePath}>\n      <p>\n        The committee is first and foremost focused on helping Morningside\n        members and attenders and distant Friends maintain a sense of community\n        via email, newsletters, the site, mailings, and other forms of\n        communication.\n      </p>\n\n      <p>\n        We meet on a regular basis to ensure that we’re helping Morningsiders\n        with their communication needs, whether it involves writing monthly\n        newsletters to assisting with a zoom meeting set-up.\n      </p>\n\n      <p>\n        We maintain an up-to-date roster of all members &amp; attenders with the\n        help and guidance of Ministry &amp; Counsel. That roster is shared with\n        the meeting on a yearly basis via email and mail delivery.\n      </p>\n\n      <p>\n        We regularly review the website and other digital means of communication\n        so that those avenues are delivering important information to Friends\n        within the meeting.\n      </p>\n\n      <p>\n        We help the clerk, other committees, and individual Friends with their\n        communication needs, such as assisting with zoom meeting scheduling,\n        sending out emails, etc.\n      </p>\n\n      <p>\n        We keep our focus on delivering important information about the meeting\n        and Quakerism so that the Meeting maintains its spiritual life.\n      </p>\n\n      <p>\n        We manage the meeting’s social media platforms such as Facebook,\n        Instagram, Twitter, making sure that they reflect our Quaker values and\n        testimonies.\n      </p>\n\n      <p>\n        We listen to Friends and help them find ways of promoting messages\n        important to Quakers.\n      </p>\n    </Committee>\n  );\n}\n","import React from \"react\";\nimport CoreLayout from \"../coreLayout\";\nimport Nav from \"../nav\";\nimport SEO from \"../seo\";\n\nexport default function CommitteePage({ title, basePath, children }) {\n  const links = [\n    [\"About\", basePath],\n    [\"Posts\", `${basePath}/posts`],\n    [\"Events\", `${basePath}/events`],\n    [\"Documents\", `${basePath}/documents`],\n  ];\n\n  return (\n    <CoreLayout withSubtitle={false}>\n      <h2>{title}</h2>\n      <Nav links={links} />\n      <section>{children}</section>\n      <SEO title={title} />\n    </CoreLayout>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { useLocation } from \"@reach/router\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst SEO = ({ title, description, image, article }) => {\n  const { pathname } = useLocation();\n  const { site } = useStaticQuery(query);\n\n  const {\n    defaultTitle,\n    titleTemplate,\n    defaultDescription,\n    siteUrl,\n    defaultImage,\n    twitterUsername,\n  } = site.siteMetadata;\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image || defaultImage}`,\n    url: `${siteUrl}${pathname}`,\n  };\n\n  return (\n    <Helmet title={seo.title} titleTemplate={titleTemplate}>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n\n      {seo.url && <meta property=\"og:url\" content={seo.url} />}\n\n      {(article ? true : null) && <meta property=\"og:type\" content=\"article\" />}\n\n      {seo.title && <meta property=\"og:title\" content={seo.title} />}\n\n      {seo.description && (\n        <meta property=\"og:description\" content={seo.description} />\n      )}\n\n      {seo.image && <meta property=\"og:image\" content={seo.image} />}\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n\n      {twitterUsername && (\n        <meta name=\"twitter:creator\" content={twitterUsername} />\n      )}\n\n      {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n\n      {seo.description && (\n        <meta name=\"twitter:description\" content={seo.description} />\n      )}\n\n      {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n    </Helmet>\n  );\n};\n\nexport default SEO;\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  article: PropTypes.bool,\n};\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  article: false,\n};\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        titleTemplate\n        defaultDescription: description\n        siteUrl: url\n        defaultImage: image\n        # twitterUsername\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}